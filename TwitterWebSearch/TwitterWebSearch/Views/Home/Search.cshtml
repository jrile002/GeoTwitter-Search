@using TwitterWebSearch.Models
@model TwitterWebSearch.Models.SearchViewModel
@{
    ViewBag.Title = "Search";
    List<int> distances = new List<int>{10, 50, 100, 1000, 2000, 3000 };
}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA95tVvipo5CN8GMr347c19CRrKokYWymE&callback=markIcons" async defer></script>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<script type="text/javascript">
    var maxTweetsDisplayed = 10;
    function applyEffects(numIters) {
        var i;
        for (i = 0; i < numIters && i < maxTweetsDisplayed; i++) {
            let queryResult = document.getElementById("queryResult" + String(i + 1));
            let tweetContent = document.getElementById("tweetContent" + String(i + 1));

            queryResult.addEventListener('mouseover', function () {
                queryResult.style.boxShadow = "0px 0px 10px 2px DodgerBlue";
                queryResult.style.cursor = "pointer";
                tweetContent.style.opacity = "";
            }, false);
            
            queryResult.addEventListener('mouseout', function () {
                queryResult.style.boxShadow = "none";
                queryResult.style.cursor = "default";
                tweetContent.style.opacity = "0.95";
            }, false);           
        }
    }
    function displayTweets() {
        var i;
        var numIters = @Model.Tweets.Count; // Length of tweet list
        var tweetPost = document.getElementById("tweetPost");

        var tweetIDs = [];
        var tweetScores = [];

        @{ 
            foreach (Tweet tweet in Model.Tweets)
            {
                <text>
                    tweetIDs.push("@tweet.id_str");
                    tweetScores.push(@tweet.rank);
                </text>

            }
        }

        for (i = 0; i < numIters && i < maxTweetsDisplayed; i++) {
            var queryResult = document.createElement("div");
            var tweetRank = document.createElement("div");
            var tweetContent = document.createElement("div");
            var tweetScore = document.createElement("div");

            // Encapsulate each query result
            queryResult.setAttribute("class", "row");
            queryResult.setAttribute("style", "width:95%; margin-left:1%; border-bottom:2px solid black");
            queryResult.setAttribute("id", "queryResult" + String(i+1));

            // Get tweet rank
            tweetRank.setAttribute("class", "col-md-1");
            tweetRank.setAttribute("style", "padding-top:10%;width:10%");
            tweetRank.setAttribute("id", "tweetRank" + String(i + 1));
            tweetRank.innerHTML = String(i+1); // Tweet rank

            // Get tweet content
            tweetContent.setAttribute("class", "col-md-1");
            tweetContent.setAttribute("style", "width:75%;");
            tweetContent.setAttribute("id", "tweetContent" + String(i + 1));
            twttr.widgets.createTweet(
                tweetIDs[i], // Tweet id
                tweetContent,
                {
                    theme: 'light'
                }
            );

            // Get tweet score
            tweetScore.setAttribute("class", "col-md-1");
            tweetScore.setAttribute("style", "padding-top:10%;width:15%;");
            tweetScore.setAttribute("id", "tweetScore" + String(i + 1));
            tweetScore.innerHTML = tweetScores[i]; // Tweet score

            queryResult.appendChild(tweetRank);
            queryResult.appendChild(tweetContent);
            queryResult.appendChild(tweetScore);
            tweetPost.appendChild(queryResult);
        }
        applyEffects(numIters);
    }

    function showPosition(position) {
        var coords = position.coords;
        $("#lat").val(coords.latitude);
        $("#lon").val(coords.longitude);
        var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

        var myOptions = {
            zoom: 5,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        var map = new google.maps.Map(document.getElementById("map"), myOptions);
        var marker;
        var i = 0;
        var infowindow;
        @{
            int count = 0;
            foreach (Tweet tweet in Model.Tweets)
            {
                <Text>
                    i = @count;
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(@tweet.geo.coordinates[0], @tweet.geo.coordinates[1]),
                        map: map
                    });

                    (function (i, marker) {
                        google.maps.event.addListener(marker, 'click', function () {
                            if (!infowindow) {
                                infowindow = new google.maps.InfoWindow();
                            }

                            infowindow.setContent("User: @tweet.user.name, Rank: @tweet.rank<br /><a href='@(tweet.entities.urls.Count > 0 ? tweet.entities.urls[0].url : "")' target='_blank'>Link</a>");
                            infowindow.open(map, marker);
                        });
                    })(i, marker);

                </Text>
                count++;
            }
        }

    }

    function markicons() {
        displayTweets()
        navigator.geolocation.getCurrentPosition(showPosition);
    }
    window.onload = markicons;

</script>
<h2>Search</h2>
<div class="container">
    <div class="row">
        @using (Html.BeginForm("Search", "Home", FormMethod.Post, new { @class = "form" }))
        {
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.SearchText, new { @class = "form-control", @style = "width:100%;border:0px;box-shadow:0px 1px 3px rgba(50,50,93,0.15), 0px 1px 0px rgba(0,0,0,0.02)" })
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.Distance, distances.Select(i => new SelectListItem { Value = (i).ToString(), Text = (i == 1000 ? "1k" : (i == 2000 ? "2k" : (i == 3000 ? "3k" : i.ToString())))}),
                            (Model.Distance == 0 ? "Distance (mi)" : Model.Distance.ToString()), new { @style= "padding:8px;border:0px;box-shadow:0px 1px 3px rgba(50,50,93,0.15), 0px 1px 0px rgba(0,0,0,0.02)" })            
            </div>
            <input id="lat" name="latitude" style="display:none;" />
            <input id="lon" name="longitude" style="display:none;" />
            <div class="col-md-1">
                <button type="submit" class="btn btn-info">Search</button>
            </div>
        }
    </div>
    <div class="row" style="padding-top:5%">
        <div class="col-md-6" style="margin-left: -2%;">
           
            <style>
                ::-webkit-scrollbar {
                    width: 12px;
                }

                ::-webkit-scrollbar-track {
                    box-shadow: inset 0 0 5px grey;
                    border-radius: 10px;
                }

                ::-webkit-scrollbar-thumb {
                    background: #0080ff;
                    border-radius: 10px;
                }

                ::-webkit-scrollbar-thumb:hover {
                    background: #0059b3;
                }
            </style>
   
            <div class="row" style="border:2px solid black; width: 99%">
                <div class="col-md-1" style="width:10%; text-align:center;">Rank</div>
                <div class="col-md-1" style="width:65%; text-align:center;">Tweet</div>
                <div class="col-md-1" style="width:25%; text-align:center;">Score</div>
            </div>
            <div id="tweetPost" style="margin-left: -2%; height: 450px; overflow-y:scroll; overflow-x:hidden" runat="server"></div>
        </div>
        <div class="col-md-6">
            <div id="map" style="width:100%;height:400px;">
            </div>
        </div>
    </div>
</div>
